spring.application.name=SkillWave

# H2 Database Configuration
spring.datasource.url=jdbc:h2:file:C:/Users/MCS/Desktop/SkillWave/skillwavedb;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Add these settings to prevent database reinitialization
spring.datasource.initialization-mode=never
spring.jpa.defer-datasource-initialization=false

# Media service settings
app.upload.dir=C:/Users/MCS/Desktop/SkillWave/uploads
app.base.url=http://localhost:8080

# File upload settings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=25MB

# General settings
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Add more detailed logging
logging.level.org.springframework.web=DEBUG
logging.level.com.example.SkillWave=DEBUG

# Enable Security Debug Logging
logging.level.org.springframework.security=DEBUG
logging.level.com.example.SkillWave.security=DEBUG

# Add this to ensure dev tools doesn't reset your database
spring.devtools.restart.enabled=true
spring.devtools.restart.additional-exclude=h2/**

# JWT Configuration
app.jwt.secret=bQeThWmZq4t7w!z%C*F-JaNdRgUkXp2s5u8x/A?D(G+KbPeShVmYq3t6w9z$C&F)J@McQfTjWnZr4u7x!A%D*G-KaPdSgUkXp2s5v8y/B?E(H+MbQeThVmY
app.jwt.expiration=86400000

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.github.client-id=YOUR_GITHUB_CLIENT_ID
spring.security.oauth2.client.registration.github.client-secret=YOUR_GITHUB_CLIENT_SECRET
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# Redirect URIs
app.oauth2.authorized-redirect-uris=http://localhost:3000/oauth2/redirect