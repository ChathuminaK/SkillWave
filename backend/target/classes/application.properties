spring.application.name=SkillWave

# Database Configuration
spring.datasource.url=jdbc:h2:file:C:/Users/MCS/Desktop/SkillWave/skillwavedb;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# JPA/Hibernate Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=true

# Prevent database reinitialization
spring.datasource.initialization-mode=never
spring.jpa.defer-datasource-initialization=false

# Media service settings
app.upload.dir=C:/Users/MCS/Desktop/SkillWave/uploads
app.base.url=http://localhost:8080

# File upload settings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=25MB

# Jackson settings
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=UTC

# Logging configuration
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.com.example.SkillWave=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %magenta([%thread]) %logger{36} - %msg%n

# Dev tools configuration
spring.devtools.restart.enabled=true
spring.devtools.restart.additional-exclude=h2/**,static/**

# JWT Configuration
app.jwt.secret=bQeThWmZq4t7w!z%C*F-JaNdRgUkXp2s5u8x/A?D(G+KbPeShVmYq3t6w9z$C&F)J@McQfTjWnZr4u7x!A%D*G-KaPdSgUkXp2s5v8y/B?E(H+MbQeThVmY
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.github.client-id=YOUR_GITHUB_CLIENT_ID
spring.security.oauth2.client.registration.github.client-secret=YOUR_GITHUB_CLIENT_SECRET
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# Redirect URIs
app.oauth2.authorized-redirect-uris=http://localhost:3000/oauth2/redirect

# Server configuration
server.port=8080
server.servlet.context-path=/
server.error.include-stacktrace=never
server.error.include-message=always
server.error.include-binding-errors=always

# Session configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false